import streamlit as st
from components.sidebar import sidebar_config 
from utils.objectApiCall import *


# T√≠tulo de la aplicaci√≥n
st.title("Gesti√≥n de Categor√≠as de Trabajador")
sidebar_config()

# Mostrar todas las categor√≠as
st.header("üìã Categor√≠as de Trabajadores")
categorias = get_categorias()
for categoria in categorias:
    with st.expander(f"{categoria['nombre']} (Simbolo: {categoria['simbolo']})"):
        st.json(categoria)

# Crear nueva categor√≠a
st.header("‚ûï Crear Categor√≠a de Trabajador")
with st.form("crear_categoria"):
    nombre = st.text_input("Nombre de la Categor√≠a")
    clase = st.text_input("Clase de la Categor√≠a")
    simbolo = st.text_input("S√≠mbolo de la Categor√≠a")
    submitted = st.form_submit_button("Crear Categor√≠a")
    if submitted:
        res = crear_categoria(nombre, clase, simbolo)
        st.success(f"Categor√≠a creada con ID: {res['id']}")

# Actualizar categor√≠a
st.header("‚úèÔ∏è Actualizar Categor√≠a de Trabajador")
id_update = st.text_input("ID de categor√≠a a actualizar")
if id_update:
    categoria = get_categoria_by_id(id_update)
    if categoria:
        nombre_u = st.text_input("Nombre", categoria.get("nombre"))
        clase_u = st.text_input("Clase", categoria.get("clase"))
        simbolo_u = st.text_input("S√≠mbolo", categoria.get("simbolo"))
        if st.button("Actualizar"):
            res = actualizar_categoria(id_update, nombre_u, clase_u, simbolo_u)
            st.success("Categor√≠a actualizada correctamente" if res else "No se pudo actualizar la categor√≠a")

# Eliminar categor√≠a
st.header("üóëÔ∏è Eliminar Categor√≠a")
id_delete = st.text_input("ID de categor√≠a a eliminar")
if st.button("Eliminar"):
    res = eliminar_categoria(id_delete)
    st.warning("Categor√≠a eliminada correctamente" if res else "No se pudo eliminar la categor√≠a")

# Gestionar CSR de una categor√≠a
st.header("üí∞ Gestionar CSR de Categor√≠a")
id_csr = st.text_input("ID de categor√≠a para CSR")
simbolo_csr = st.text_input("S√≠mbolo de categor√≠a para obtener CSR")
if id_csr:
    csr_categoria = get_csr_by_fecha(id_csr, "2025-04")  # Ejemplo de fecha "yyyy-mm"
    if csr_categoria:
        st.write(f"CSR para {id_csr}: {csr_categoria}")
    nuevo_csr = st.number_input("Nuevo valor CSR", min_value=0.0, value=0.0, format="%.2f")
    if st.button("Actualizar CSR"):
        res = actualizar_csr(id_csr, "2025-04", nuevo_csr)
        st.success("CSR actualizado correctamente" if res else "No se pudo actualizar CSR")

# Consultar CSR por s√≠mbolo
st.header("üîç Consultar CSR √öltimo por S√≠mbolo")
simbolo = st.text_input("S√≠mbolo de categor√≠a para consultar √∫ltimo CSR")
if simbolo:
    csr_ultimo = get_ultimo_csr(simbolo)
    if csr_ultimo:
        st.write(f"√öltimo CSR para {simbolo}: {csr_ultimo}")
    else:
        st.warning("No se encontr√≥ CSR para este s√≠mbolo.")
